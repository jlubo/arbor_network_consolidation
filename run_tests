#!/bin/bash

# build necessary catalogue (also sets the environment to run custom Arbor installation)
#source build_catalogue
#source build_catalogue_simd
#source build_catalogue_gpu
source build_catalogue_gpu-use_gpu_rng

# run specific tests (add `-s` for console output)
#python3 -m pytest ./test_arborNetworkConsolidation.py::test_smallnet2_basic_early
#python3 -m pytest ./test_arborNetworkConsolidation.py::test_smallnet2_basic_late
#python3 -m pytest ./test_arborNetworkConsolidation.py::test_generated_connectivity
#python3 -m pytest ./test_arborNetworkConsolidation.py::test_smallnetX_onespike
#python3 -m pytest ./test_arborNetworkConsolidation.py::test_defn_max_activity
#python3 -m pytest ./test_arborNetworkConsolidation.py::test_smallnet3_schedules
#python3 -m pytest ./test_arborNetworkConsolidation.py::test_defn_onespike
#python3 -m pytest ./test_arborNetworkConsolidation.py::test_smallnetX_onespike

# run all tests with coverage (send output to terminal and file, using tee with unbuffer)
#python3.10 -m coverage run -m pytest ./test_arborNetworkConsolidation.py --report-log=test_result.txt
unbuffer python3.10 -m coverage run -m pytest ./test_arborNetworkConsolidation.py | tee -i test_result.txt
#unbuffer python3.10 -m coverage run -m pytest ./test_arborNetworkConsolidation.py::test_smallnet3_schedules | tee -i test_result.txt
#unbuffer python3.10 -m coverage run -m pytest ./test_arborNetworkConsolidation.py::test_smallnet2_basic_late | tee -i test_result.txt

# line coverage output
python3.10 -m coverage report -m --omit=/usr/*,**/lib/python*/* > test_coverage.txt
